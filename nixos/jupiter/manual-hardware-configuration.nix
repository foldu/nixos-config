# Modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  outputs,
  ...
}:
let
  subvol = outputs.lib.btrfsSubvolOn "/dev/disk/by-uuid/bcaceeb7-36c8-48cd-b189-5254a93998e9" [
    "noatime"
    "compress=zstd"
  ];
in
{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "ahci"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = subvol "root";

  fileSystems."/home" = subvol "root/home";

  fileSystems."/var/tmp" = subvol "root/var/tmp";

  fileSystems."/var/log" = subvol "root/var/log";

  fileSystems."/var/cache" = subvol "root/var/cache";

  fileSystems."/nix" = subvol "root/nix";

  fileSystems."/swap" = subvol "swap";

  fileSystems."/efi" = {
    device = "/dev/disk/by-uuid/C637-78DD";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  swapDevices = [ { device = "/swap/swapfile"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
